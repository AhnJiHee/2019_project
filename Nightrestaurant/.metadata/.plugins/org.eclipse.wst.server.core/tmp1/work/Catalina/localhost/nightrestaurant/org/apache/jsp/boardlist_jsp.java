/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.9
 * Generated at: 2019-02-21 09:59:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dao.MemberDAO;
import vo.BoardVO;
import java.util.ArrayList;
import dao.BoardDAO;

public final class boardlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

MemberDAO dao2 = new MemberDAO();
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시물 리스트</title>\r\n");
      out.write("\r\n");
      out.write("<script src=\"jquery-3.2.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\t$(\"#write\").on(\"click\", function() {\r\n");
      out.write("\t\t\tif ($(\"#status\").val() == \"on\") {\r\n");
      out.write("\t\t\t\tlocation.href = \"boardwriteform.jsp\"\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\talert(\"로그인이 필요합니다\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}); // write end\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#search\").click(function() {\r\n");
      out.write("\t\t\tvar tag = $(\"#tag\").val();\r\n");
      out.write("\t\t\tvar word = $(\"#word\").val();\r\n");
      out.write("\t\t\tvar param = \"tag=\" + tag + \"&word=\" + word;\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"get\",\r\n");
      out.write("\t\t\t\turl : \"boardlistsearch.jsp\",\r\n");
      out.write("\t\t\t\tdata : param,\r\n");
      out.write("\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\t$(\"#div5\").html(data);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}); // search end\r\n");
      out.write("\r\n");
      out.write("\t\t$(\".Page\").on('click', function(e) {\r\n");
      out.write("\t\t\tvar branch = 1\r\n");
      out.write("\t\t\tvar page = $(e.target).html();\r\n");
      out.write("\t\t\tvar param = \"branch=\" + branch + \"&page=\" + page;\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"get\",\r\n");
      out.write("\t\t\t\turl : \"boardlist.jsp\",\r\n");
      out.write("\t\t\t\tdata : param,\r\n");
      out.write("\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\t$(\"#div5\").html(data);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}); //.page end\r\n");
      out.write("\r\n");
      out.write("\t}); // ready end\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("a {\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\tborder-top: 3px solid #98c593;\r\n");
      out.write("\tborder-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th, td {\r\n");
      out.write("\tborder-bottom: 1px solid #BDBDBD;\r\n");
      out.write("\tpadding: 10px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("\tbackground-color: #bbdefb;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td {\r\n");
      out.write("\tbackground-color: #FAFAFA;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"div5\">\r\n");
      out.write("\t\t<!--게시판 제목-->\r\n");
      out.write("\t\t<div class=\"center\" id=\"div1\">\r\n");
      out.write("\t\t\t<h1>게시판 목록입니다.</h1>\r\n");
      out.write("\t\t\t<table class=\"list\" border=\"2px\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>번호</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"250\">제목</td>\r\n");
      out.write("\t\t\t\t\t<td>작성자</td>\r\n");
      out.write("\t\t\t\t\t<td>작성시간</td>\r\n");
      out.write("\t\t\t\t\t<td>조회수</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<!--게시물 목록 출력-->\r\n");
      out.write("\t\t\t\t");

					BoardDAO dao = new BoardDAO();
					int pagenumb = 1; // 기본으로 보여줄 페이지
					if (request.getParameter("page") != null) {
						pagenumb = Integer.parseInt(request.getParameter("page"));
					}
					ArrayList<BoardVO> list = dao.getBoardList(pagenumb);
					for (int i = 0; i < list.size(); i++) {
						BoardVO vo = list.get(i);
						out.println("<tr><td>" + vo.getBoardseq() + "</td><td>" + "<a href = 'boarddetails.jsp?boardseq="
								+ vo.getBoardseq() + " '>" + vo.getBoardtitle() + "</a></td><td>" + vo.getBoardwriter()
								+ "</td><td>" + vo.getBoardtime() + "</td><td>" + vo.getBoardviewcount() + "</td></tr>");
					}
				
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\"><input type=text id=\"word\" name=\"word\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"검색할 내용을 입력하세요.\"></td>\r\n");
      out.write("\t\t\t\t\t<td><select id=\"tag\" name=\"tag\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"boardtitle\">제목</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"boardcontents\">내용</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"boardwriter\">작성자</option>\r\n");
      out.write("\t\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=button id=\"search\" value=\"검색 버튼\" /></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=button id=\"write\" value=\"글쓰기 버튼\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 로그인 상태 확인 태그-->\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"status\" value=");
      out.print(dao2.loginstatus(session));
      out.write(">\r\n");
      out.write("\r\n");
      out.write("\t\t<!--페이지 번호-->\r\n");
      out.write("\t\t<table class=\"center\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<form action=\"main\">\r\n");
      out.write("\t\t\t\t\t");

						int totalcont = dao.getTotalContents();
						if (totalcont % BoardDAO.EACH == 0) {
							pagenumb = totalcont / BoardDAO.EACH;
						} else {
							pagenumb = totalcont / BoardDAO.EACH + 1;
						}
						for (int i = 1; i <= pagenumb; i++) {
							out.print("<td><span class='Page'>" + i + "</span></td>");
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
