/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.9
 * Generated at: 2019-02-08 00:15:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dao.MemberDAO;
import vo.BoardVO;
import java.util.ArrayList;
import dao.BoardDAO;

public final class boardlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

 MemberDAO dao2 = new MemberDAO(); 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>게시물 리스트</title>\n");
      out.write("\n");
      out.write("<script src=\"jquery-3.2.1.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t$(document).ready(function(){\n");
      out.write("\t\t$(\"#write\").on(\"click\", function(){\n");
      out.write("\t\t\tif($(\"#status\").val() == \"on\") {\n");
      out.write("\t\t\t\tlocation.href = \"boardwriteform.jsp\"\n");
      out.write("\t\t\t} else{\n");
      out.write("\t\t\t\talert(\"로그인이 필요합니다\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}); // write end\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#search\").click(function() {\n");
      out.write("\t\t\tvar tag=$(\"#tag\").val();\n");
      out.write("\t\t\tvar word=$(\"#word\").val();\n");
      out.write("\t\t\tvar param=\"tag=\"+tag+\"&word=\"+word;\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\turl: \"boardlistsearch.jsp\",\n");
      out.write("\t\t\t\tdata: param,\n");
      out.write("\t\t\t\tsuccess: function(data) {\n");
      out.write("\t\t\t\t\t$(\"#div1\").html(data);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}); // search end\n");
      out.write("\t}); // ready end\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<!--게시판 제목-->\n");
      out.write("<div class=\"center\" id=\"div1\">\n");
      out.write("<h1>게시판 목록입니다.</h1>\n");
      out.write("\t<table class=\"list\" border=\"2px\">\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>번호</td><td width=\"250\">제목</td><td>작성자</td><td>작성시간</td><td>조회수</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<!--게시물 목록 출력-->\n");
      out.write("\t\t");
 
				BoardDAO dao = new BoardDAO(); 
				int pagenumb = 1; // 기본으로 보여줄 페이지
				int each = 10; // 페이지 당 보여주고 싶은 게시물 수
				if(request.getParameter("page") != null){
					pagenumb = Integer.parseInt(request.getParameter("page"));
				}
				ArrayList<BoardVO> list = dao.getBoardList(pagenumb, each);
				for (int i = 0; i < list.size(); i++) {
				BoardVO vo = list.get(i);
				out.println ("<tr><td>" + vo.getBoardseq() + "</td><td>"
									+ "<a href = 'boarddetails.jsp?boardseq="+vo.getBoardseq()+" '>"
									+ vo.getBoardtitle() + "</a></td><td>"
									+ vo.getBoardwriter() + "</td><td>"
									+ vo.getBoardtime() + "</td><td>"
									+ vo.getBoardviewcount() + "</td></tr>");
				}
			
		
      out.write("\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td colspan=\"2\"><input type=text id=\"word\" name=\"word\" placeholder=\"검색할 내용을 입력하세요.\"></td>\n");
      out.write("\t\t\t<td><select id=\"tag\" name=\"tag\">\n");
      out.write("\t\t\t\t<option value=\"boardtitle\">제목</option>\n");
      out.write("\t\t\t\t<option value=\"boardcontents\">내용</option>\n");
      out.write("\t\t\t\t<option value=\"boardwriter\">작성자</option>\n");
      out.write("\t\t\t\t</select></td>\n");
      out.write("\t\t\t<td><input type = button id=\"search\" value = \"검색 버튼\"/></td>\n");
      out.write("\t\t\t<td><input type = button id = \"write\" value = \"글쓰기 버튼\"></td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t</table> \n");
      out.write("</div> \n");
      out.write("\n");
      out.write("<!-- 로그인 상태 확인 태그-->\n");
      out.write("\n");
      out.write("<input type=\"hidden\" id=\"status\" value=");
      out.print(dao2.loginstatus(session));
      out.write(">\n");
      out.write("\n");
      out.write("<!--페이지 번호-->\n");
      out.write("<table class=\"center\" >\n");
      out.write("\t<tr>\n");
      out.write("\t<form action = \"mainpage.jsp\">\n");
      out.write("\t\t");

		int totalcont = dao.getTotalContents();
		if (totalcont % each ==0){
			pagenumb = totalcont / each;
		} else {
			pagenumb = totalcont / each +1;
		}
		for (int i =1 ; i <= pagenumb; i ++){
		out.print("<td><input type=submit name='page' value='"+i+"'></td>");
		}
		
      out.write("\n");
      out.write("\t</form>\n");
      out.write("\t</tr>\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
