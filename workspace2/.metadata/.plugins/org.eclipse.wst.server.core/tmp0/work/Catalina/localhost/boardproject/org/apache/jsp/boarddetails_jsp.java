/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.9
 * Generated at: 2019-02-09 08:19:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dao.MemberDAO;
import vo.BoardVO;
import dao.BoardDAO;

public final class boarddetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

 MemberDAO dao2 = new MemberDAO(); 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>게시물 보기</title>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("\t.center{text-align: center; margin: auto;}\n");
      out.write("\ttable.list{text-align: center; margin: auto; border: 3px solid purple;}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script src=\"jquery-3.2.1.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t$(document).ready(function(){\n");
      out.write("\t$(\"#update\").on(\"click\", function(){\n");
      out.write("\t\tif($(\"#authority\").val() == \"TRUE\") {\n");
      out.write("\t\t\tlocation.href = \"boardupdate.jsp\"\n");
      out.write("\t\t} else{\n");
      out.write("\t\t\talert(\"작성자만 수정할 수 있습니다.\");\n");
      out.write("\t\t}\n");
      out.write("\t}); // update end\n");
      out.write("\t$(\"#delete\").on(\"click\", function(){\n");
      out.write("\t\tif($(\"#authority\").val() == \"TRUE\") {\n");
      out.write("\t\t\tlocation.href = \"boarddetailsdelete.jsp\"\n");
      out.write("\t\t} else{\n");
      out.write("\t\t\talert(\"작성자만 삭제할 수 있습니다.\");\n");
      out.write("\t\t}\n");
      out.write("\t}); // delete end\n");
      out.write("\t}); // ready end\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");


int seq = Integer.parseInt(request.getParameter("boardseq"));
session.setAttribute("boardseq", seq);
BoardDAO dao = new BoardDAO();
dao.viewCount(seq);
BoardVO vo = dao.getBoardDetail(seq);
session.setAttribute("boardvo", vo);

String boardwriter = vo.getBoardwriter();
String boardtitle = vo.getBoardtitle();
String boardcontents = vo.getBoardcontents();
String boardtime = vo.getBoardtime();
int boardviewcount = vo.getBoardviewcount();


      out.write("\n");
      out.write("\n");
      out.write("<table class=\"list\" border=\"2px\">\n");
      out.write("\n");
      out.write("<tr>\n");
      out.write("<td>게시물 번호</td><td>");
      out.print(seq);
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td>제목</td><td>");
      out.print(boardtitle);
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td height = 300>내용</td><td width = 500>");
      out.print(boardcontents);
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td>작성자</td><td>");
      out.print(boardwriter);
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td>작성 시간</td><td>");
      out.print(boardtime);
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td>조회수</td><td>");
      out.print(boardviewcount);
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("</table>\n");
      out.write("<table class=\"center\">\n");
      out.write("<tr>\n");
      out.write("\t<td>\n");
      out.write("\t\t<form action=\"boardupdate.jsp\">\n");
      out.write("\t\t<input type=button id='update' value=\"수정\">\n");
      out.write("\t\t</form>\n");
      out.write("\t</td>\n");
      out.write("\t<td>\n");
      out.write("\t\t<form action=\"boarddetailsdelete.jsp\">\n");
      out.write("\t\t<input type=button id='delete' value=\"삭제\">\n");
      out.write("\t\t</form>\n");
      out.write("\t</td>\n");
      out.write("\t<td>\n");
      out.write("\t\t<form action=\"mainpage.jsp\">\n");
      out.write("\t\t<input type=submit value=\"메인으로 돌아가기\">\n");
      out.write("\t\t</form>\n");
      out.write("\t</td>\n");
      out.write("</tr>\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("<!-- 로그인 상태 확인 태그-->\n");
      out.write('\n');
String authority = dao2.authority(session, boardwriter); 
      out.write("   \n");
      out.write("<input type=\"hidden\" id=\"authority\" value=");
      out.print(authority);
      out.write(">\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
